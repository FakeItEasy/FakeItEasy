<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>$(FakeItEasyTargetFrameworks)</TargetFrameworks>
    <AssemblyName>FakeItEasy</AssemblyName>
    <FileAlignment>512</FileAlignment>
    <SignAssembly>true</SignAssembly>
  </PropertyGroup>

  <PropertyGroup Label="Package properties">
    <Title>FakeItEasy - Mocking made faking easy!</Title>
    <Authors>Patrik Hägne, FakeItEasy contributors</Authors>
    <Description>It's faking amazing! The easy mocking library for .NET that works great in C# and VB.NET alike. No need to know the difference between a stub, a mock or a spy, everything's a fake! The easy to use, refactoring friendly API makes faking a breeze.</Description>
    <PackageTags>TDD;unittesting;mocks;mocking;fakes;faking;stubs;stubbing;spy;spies;doubles;isolation;substitutes;substitution</PackageTags>
  </PropertyGroup>

  <PropertyGroup Label="Code generation properties">
      <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>
      <CompilerGeneratedFilesOutputPath>Generated</CompilerGeneratedFilesOutputPath>
  </PropertyGroup>

  <ItemGroup Label="Code generation items">
    <Compile Remove="$(CompilerGeneratedFilesOutputPath)/**/*.cs" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Castle.Core" Version="5.1.1" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="../../tools/CodeGen/CodeGen.csproj"
                      OutputItemType="Analyzer"
                      ReferenceOutputAssembly="false" />
  </ItemGroup>

  <PropertyGroup Condition="'$(Configuration)' == 'Release'">
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
  </PropertyGroup>

  <!-- .NET Standard 2.1 -->

  <PropertyGroup Condition="'$(TargetFramework)' == 'netstandard2.1'">
    <DefineConstants>$(DefineConstants);LACKS_CALLERARGUMENTEXPRESSION</DefineConstants>
  </PropertyGroup>

  <!-- .NET Standard 2.0 -->

  <PropertyGroup Condition="'$(TargetFramework)' == 'netstandard2.0'">
    <DefineConstants>$(DefineConstants);LACKS_NULLABLE_ATTRIBUTES;LACKS_STRING_CONTAINS_COMPARISONTYPE;LACKS_CALLERARGUMENTEXPRESSION;TRY_ISBYREF_CREATION</DefineConstants>
  </PropertyGroup>

  <!-- .NET Framework -->

  <PropertyGroup Condition="$([MSBuild]::GetTargetFrameworkIdentifier('$(TargetFramework)')) == '.NETFramework'">
    <DefineConstants>$(DefineConstants);LACKS_NULLABLE_ATTRIBUTES;LACKS_ARRAY_EMPTY;LACKS_STRING_CONTAINS_COMPARISONTYPE;LACKS_CALLERARGUMENTEXPRESSION;TRY_ISBYREF_CREATION</DefineConstants>
  </PropertyGroup>

  <ItemGroup Condition="!$([MSBuild]::IsTargetFrameworkCompatible('$(TargetFramework)', 'netstandard2.1'))">
    <Compile Remove="ValueTaskReturnValueConfigurationExtensions.cs" />
    <Compile Remove="ValueTaskAsyncReturnValueConfigurationExtensions.cs" />
  </ItemGroup>

</Project>
