<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="..\packages\Xbehave.Core.2.0.0\build\portable-net45\Xbehave.Core.props" Condition="Exists('..\packages\Xbehave.Core.2.0.0\build\portable-net45\Xbehave.Core.props')" />
  <Import Project="..\packages\xunit.core.2.0.0\build\portable-net45+win+wpa81+wp80+monotouch+monoandroid+Xamarin.iOS\xunit.core.props" Condition="Exists('..\packages\xunit.core.2.0.0\build\portable-net45+win+wpa81+wp80+monotouch+monoandroid+Xamarin.iOS\xunit.core.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{FA539A2D-98DC-4300-9A2C-EC6FE38A7392}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>FakeItEasy.Specs</RootNamespace>
    <AssemblyName>FakeItEasy.Specs</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">..\..\Source\</SolutionDir>
    <TargetFrameworkProfile />
    <CodeAnalysisCulture>en-US</CodeAnalysisCulture>
    <NuGetPackageImportStamp>
    </NuGetPackageImportStamp>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
    <CodeAnalysisRuleSet>FakeItEasy.Specs.ruleset</CodeAnalysisRuleSet>
    <Prefer32Bit>false</Prefer32Bit>
    <StyleCopTreatErrorsAsWarnings>true</StyleCopTreatErrorsAsWarnings>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>Bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <CodeAnalysisRuleSet>FakeItEasy.Specs.ruleset</CodeAnalysisRuleSet>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <StyleCopTreatErrorsAsWarnings>true</StyleCopTreatErrorsAsWarnings>
    <DebugSymbols>true</DebugSymbols>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="FluentAssertions, Version=2.2.0.0, Culture=neutral, PublicKeyToken=33f2691a05b67b6a, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\packages\FluentAssertions.2.2.0.0\lib\net45\FluentAssertions.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
    <Reference Include="Xbehave.Core, Version=2.0.0.0, Culture=neutral, PublicKeyToken=e4957f48888f9fe8, processorArchitecture=MSIL">
      <HintPath>..\packages\Xbehave.Core.2.0.0\lib\portable-net45\Xbehave.Core.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="xunit.abstractions, Version=2.0.0.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c, processorArchitecture=MSIL">
      <HintPath>..\packages\xunit.abstractions.2.0.0\lib\net35\xunit.abstractions.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="xunit.core, Version=2.0.0.2929, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c, processorArchitecture=MSIL">
      <HintPath>..\packages\xunit.extensibility.core.2.0.0\lib\portable-net45+win+wpa81+wp80+monotouch+monoandroid+Xamarin.iOS\xunit.core.dll</HintPath>
      <Private>True</Private>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="AssertingOnSetOnlyPropertiesSpecs.cs" />
    <Compile Include="AsyncAwaitSpecs.cs" />
    <Compile Include="ConfigurationSpecs.cs" />
    <Compile Include="CreationOptionsSpecs.cs" />
    <Compile Include="DisposableSpecs.cs" />
    <Compile Include="FakeScopeSpecs.cs" />
    <Compile Include="GlobalSuppressions.cs" />
    <Compile Include="CreationSpecs.cs" />
    <Compile Include="DomainEvents.cs" />
    <Compile Include="FakeConfiguratorSpecs.cs" />
    <Compile Include="Properties\XunitAssemblyInfo.cs" />
    <Compile Include="SelfInitializedFakesSpecs.cs" />
    <Compile Include="LazySpecs.cs" />
    <Compile Include="DummyFactorySpecs.cs" />
    <Compile Include="MakesVirtualCallInConstructor.cs" />
    <Compile Include="OrderedCallMatchingSpecs.cs" />
    <Compile Include="FakingInternalsSpecs.cs" />
    <Compile Include="EventRaisingSpecs.cs" />
    <Compile Include="FixtureInitializationSpecs.cs" />
    <Compile Include="FakingDelegates.cs" />
    <Compile Include="CallMatchingSpecs.cs" />
    <Compile Include="AssignsOutAndRefParametersSpecs.cs" />
    <Compile Include="PropertySpecs.cs" />
    <Compile Include="CallsBaseMethodsFakeSpecs.cs" />
    <Compile Include="StrictFakeSpecs.cs" />
    <Compile Include="UnconfiguredFakeSpecs.cs" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\FakeItEasy.Tests\FakeItEasy.Tests.csproj">
      <Project>{0E26272D-045A-47C2-8928-BD9B980115D5}</Project>
      <Name>FakeItEasy.Tests</Name>
    </ProjectReference>
    <ProjectReference Include="..\FakeItEasy\FakeItEasy.csproj">
      <Project>{80721425-68E5-48DC-87EA-41D63D0B45FA}</Project>
      <Name>FakeItEasy</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <None Include="FakeItEasy.Specs.ruleset" />
    <None Include="packages.config" />
    <None Include="Settings.StyleCop" />
  </ItemGroup>
  <ItemGroup>
    <CodeAnalysisDictionary Include="..\FakeItEasy.Dictionary.xml">
      <Link>Properties\FakeItEasy.Dictionary.xml</Link>
    </CodeAnalysisDictionary>
  </ItemGroup>
  <ItemGroup>
    <CodeAnalysisDictionary Include="..\FakeItEasy.Dictionary.Tests.xml">
      <Link>Properties\FakeItEasy.Dictionary.Tests.xml</Link>
    </CodeAnalysisDictionary>
  </ItemGroup>
  <ItemGroup>
    <Service Include="{82A7F48D-3B50-4B1E-B82E-3ADA8210C358}" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Import Project="..\packages\StyleCop.MSBuild.4.7.48.2\build\StyleCop.MSBuild.Targets" Condition="Exists('..\packages\StyleCop.MSBuild.4.7.48.2\build\StyleCop.MSBuild.Targets')" />
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Enable NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('..\packages\StyleCop.MSBuild.4.7.48.2\build\StyleCop.MSBuild.Targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\StyleCop.MSBuild.4.7.48.2\build\StyleCop.MSBuild.Targets'))" />
    <Error Condition="!Exists('..\packages\xunit.core.2.0.0\build\portable-net45+win+wpa81+wp80+monotouch+monoandroid+Xamarin.iOS\xunit.core.props')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\xunit.core.2.0.0\build\portable-net45+win+wpa81+wp80+monotouch+monoandroid+Xamarin.iOS\xunit.core.props'))" />
    <Error Condition="!Exists('..\packages\Xbehave.Core.2.0.0\build\portable-net45\Xbehave.Core.props')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\Xbehave.Core.2.0.0\build\portable-net45\Xbehave.Core.props'))" />
  </Target>
</Project>